{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/ourViewSeoul/src/App/_Img.jsx\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Worker from 'worker-loader!./Worker'; // eslint-disable-line import/no-webpack-loader-syntax\n\nconst width = 400;\n\nclass Img extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      width: null,\n      height: null,\n      data: [],\n      clickValue: .7\n    };\n  }\n\n  componentDidMount() {\n    this.worker = new Worker();\n    this.imageData();\n  }\n\n  imageData() {\n    d3.image(this.props.src, {\n      crossOrigin: \"anonymous\"\n    }).then(image => {\n      const height = Math.round(width * image.height / image.width);\n      const context = this.refs.canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, width, height);\n      const {\n        data: rgba\n      } = context.getImageData(0, 0, width, height);\n      const data = new Float64Array(width * height);\n\n      for (let i = 0, n = rgba.length / 4; i < n; ++i) {\n        data[i] = Math.max(0, 1 - rgba[i * 4] / 250);\n      }\n\n      ;\n      this.setState({\n        width,\n        height,\n        data\n      });\n      this.updateCanvas();\n    });\n  }\n\n  updateCanvas() {\n    const {\n      width,\n      height,\n      data,\n      clickValue\n    } = this.state;\n    const context = this.refs.canvas.getContext('2d');\n    const n = Math.round(width * height / 40);\n\n    function messaged({\n      data: points\n    }) {\n      context.fillStyle = \"#fff\";\n      context.fillRect(0, 0, width, height);\n      context.beginPath();\n\n      for (let i = 0, n = points.length; i < n; i += 2) {\n        const x = points[i],\n              y = points[i + 1];\n        context.moveTo(x + 1.5, y);\n        context.arc(x, y, 2 + clickValue, 0, 2 * Math.PI);\n      }\n\n      context.fillStyle = \"#000\";\n      context.fill();\n    }\n\n    this.worker.addEventListener(\"message\", messaged);\n    this.worker.postMessage({\n      data,\n      width,\n      height,\n      n\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      width: width,\n      height: width,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      ref: \"canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Img;","map":{"version":3,"sources":["/Users/user/Documents/GitHub/ourViewSeoul/src/App/_Img.jsx"],"names":["React","Component","d3","Worker","width","Img","state","height","data","clickValue","componentDidMount","worker","imageData","image","props","src","crossOrigin","then","Math","round","context","refs","canvas","getContext","drawImage","rgba","getImageData","Float64Array","i","n","length","max","setState","updateCanvas","messaged","points","fillStyle","fillRect","beginPath","x","y","moveTo","arc","PI","fill","addEventListener","postMessage","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Worker from 'worker-loader!./Worker'; // eslint-disable-line import/no-webpack-loader-syntax\n\nconst width = 400;\n  \nclass Img extends Component {\n    state = {\n            width : null,\n            height : null,\n            data : [],\n            clickValue : .7,\n        }\n\n\n    componentDidMount() {\n        this.worker = new Worker();\n        this.imageData();\n    }\n\n    imageData() {\n        d3.image(this.props.src,  {crossOrigin: \"anonymous\"}).then(image => {\n            const height = Math.round(width * image.height / image.width);\n            const context = this.refs.canvas.getContext('2d');\n            context.drawImage(image, 0, 0, image.width, image.height, 0, 0, width, height);\n            const {data: rgba} = context.getImageData(0, 0, width, height);\n            const data = new Float64Array(width * height);\n            for (let i = 0, n = rgba.length / 4; i < n; ++i) {\n                data[i] = Math.max(0, 1 - rgba[i * 4] / 250)\n            };\n            this.setState({ width, height, data })\n            this.updateCanvas();\n        })\n    }\n\n    updateCanvas() {\n        const { width, height, data, clickValue } = this.state\n        const context = this.refs.canvas.getContext('2d');\n        const n = Math.round(width * height / 40)\n\n        function messaged({ data: points}) {\n            context.fillStyle = \"#fff\";\n            context.fillRect(0, 0, width, height);\n            context.beginPath();\n            for (let i = 0, n = points.length; i < n; i += 2) {\n                const x = points[i], y = points[i + 1];\n                context.moveTo(x + 1.5, y);\n                context.arc(x, y, 2+clickValue, 0, 2 * Math.PI);\n            }\n            context.fillStyle = \"#000\";\n            context.fill();\n        }\n\n        this.worker.addEventListener(\"message\", messaged);\n        this.worker.postMessage({data, width, height, n});\n    }\n      \n    render() {\n        return (\n            <canvas width={width} height={width} style={{width:'100%', height:'100%'}} ref=\"canvas\" />\n        );\n    }\n}\n\nexport default Img;\n\n\n\n"]},"metadata":{},"sourceType":"module"}