{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/ourViewSeoul/src/App/SeoulMap.js\";\nimport React, { PureComponent } from 'react';\nimport Map from './_Map.jsx';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport styled from 'styled-components';\nimport Window from './Window';\nimport IknowButton from './IknowButton';\nimport Output from './Output';\nimport { Route, withRouter } from 'react-router-dom';\nconst SvgContainer = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 50vw;\n    height: 50vh;\n    margin-top: 10vh;\n    margin-bottom: 40vh;\n\n    @media all and (min-width:0px) and (max-width:1023px) {\n        display: inline-block;\n        position: relative;\n        width: 100vw;\n        height: 50vh;\n        margin-top: 20vh;\n        margin-bottom: 30vh;\n        max-width:100%;\n    }\n`;\n\nclass SeoulMap extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgShow: false,\n      wheelValue: 2,\n      station: ':station'\n    };\n    this._updateDimensions = this._updateDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this._updateDimensions();\n\n    window.addEventListener(\"resize\", this._updateDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this._updateDimensions);\n  }\n\n  _updateDimensions() {\n    if (window.innerWidth < 1023) {\n      this.setState({\n        wheelValue: 140\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    const station = this.props.match.params.station;\n\n    if (this.state.station !== station) {\n      this._windowOpener(station);\n    }\n  }\n\n  _windowOpener(station) {\n    this.setState({\n      station: station,\n      imgShow: !this.state.imgShow\n    });\n  }\n\n  render() {\n    const {\n      wheelValue,\n      imgShow,\n      station\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IknowButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TransformWrapper, {\n      defaultScale: 1,\n      wheel: {\n        step: wheelValue\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, ({\n      resetTransform,\n      ...rest\n    }) => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransformComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SvgContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }))))), /*#__PURE__*/React.createElement(Window, {\n      show: imgShow,\n      station: station,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Output, {\n      imgShow: imgShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(SeoulMap);","map":{"version":3,"sources":["/Users/user/Documents/GitHub/ourViewSeoul/src/App/SeoulMap.js"],"names":["React","PureComponent","Map","TransformWrapper","TransformComponent","styled","Window","IknowButton","Output","Route","withRouter","SvgContainer","div","SeoulMap","constructor","props","state","imgShow","wheelValue","station","_updateDimensions","bind","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","componentDidUpdate","match","params","_windowOpener","render","step","resetTransform","rest"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport Map from './_Map.jsx';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport styled from 'styled-components';\nimport Window from './Window';\nimport IknowButton from './IknowButton';\nimport Output from './Output';\nimport { Route, withRouter } from 'react-router-dom'\n\nconst SvgContainer = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 50vw;\n    height: 50vh;\n    margin-top: 10vh;\n    margin-bottom: 40vh;\n\n    @media all and (min-width:0px) and (max-width:1023px) {\n        display: inline-block;\n        position: relative;\n        width: 100vw;\n        height: 50vh;\n        margin-top: 20vh;\n        margin-bottom: 30vh;\n        max-width:100%;\n    }\n`;\n\nclass SeoulMap extends PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {\n            imgShow : false,\n            wheelValue : 2,\n            station : ':station',\n        }\n        this._updateDimensions = this._updateDimensions.bind(this);\n    }\n    \n    componentDidMount() {\n        this._updateDimensions();\n        window.addEventListener(\"resize\", this._updateDimensions);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this._updateDimensions);\n    }\n    _updateDimensions() {\n        if(window.innerWidth < 1023) {\n          this.setState({ wheelValue : 140 });\n        } \n    }\n\n    componentDidUpdate() {\n        const station = this.props.match.params.station;\n\n        if (this.state.station !== station) {\n            this._windowOpener(station)\n        } \n    }\n    _windowOpener(station) {\n        this.setState({station: station, imgShow: !this.state.imgShow} )\n    }\n    \n    render() { \n        const { wheelValue, imgShow, station } = this.state;\n\n        return (\n            <>\n            <IknowButton />\n            <TransformWrapper \n                defaultScale={1}\n                wheel={{\n                    step: wheelValue,\n                }}\n            >\n                {({ resetTransform, ...rest }) => (\n                <React.Fragment>\n                    <TransformComponent>\n                        <SvgContainer>\n                            <Map />\n                        </SvgContainer>\n                    </TransformComponent>\n                </React.Fragment>\n                )}\n            </TransformWrapper>\n            <Window show={imgShow} station={station}/>\n            <Output imgShow={imgShow}/>\n            </>\n        )\n    }\n}\n\nexport default withRouter(SeoulMap);   "]},"metadata":{},"sourceType":"module"}