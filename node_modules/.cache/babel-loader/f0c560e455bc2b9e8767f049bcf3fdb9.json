{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/ourViewSeoul/src/App/_Img.jsx\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport points from '../data/points.csv';\nimport Worker from 'worker-loader!./Worker'; // eslint-disable-line import/no-webpack-loader-syntax\n\nconst width = 600;\n\nclass Img extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      height: null,\n      data: [],\n      clickValue: .6\n    };\n  }\n\n  componentDidMount() {\n    // this.worker = new Worker();\n    this.imageData();\n  }\n\n  imageData() {\n    d3.image(this.props.src, {\n      crossOrigin: \"anonymous\"\n    }).then(image => {\n      const height = Math.round(width * image.height / image.width);\n      const context = this.refs.canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, width, height);\n      console.log(context.getImageData(0, 0, width, height));\n      const {\n        data: rgba\n      } = context.getImageData(0, 0, width, height);\n      const data = new Float64Array(width * height);\n\n      for (let i = 0, n = rgba.length / 4; i < n; ++i) {\n        data[i] = Math.max(0, 1 - rgba[i * 4] / 200);\n      }\n\n      ;\n      this.setState({\n        height,\n        data\n      });\n      this.updateCanvas();\n    });\n  }\n\n  updateCanvas() {\n    const {\n      height,\n      clickValue\n    } = this.state;\n    const context = this.refs.canvas.getContext('2d');\n    const n = Math.round(width * height / 40);\n\n    function messaged({\n      data: points\n    }) {\n      context.fillStyle = \"#fff\";\n      context.fillRect(0, 0, width, height);\n      context.beginPath();\n\n      for (let i = 0, n = points.length; i < n; i += 2) {\n        const x = points[i],\n              y = points[i + 1];\n        context.moveTo(x + 1.5, y);\n        context.arc(x, y, 2 + clickValue, 0, 2 * Math.PI);\n      }\n\n      context.fillStyle = \"#000\";\n      context.fill();\n    } // this.worker.addEventListener(\"message\", messaged);\n    // this.worker.postMessage({data, width, height, n});\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      width: width,\n      height: width,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      ref: \"canvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Img;","map":{"version":3,"sources":["/Users/user/Documents/GitHub/ourViewSeoul/src/App/_Img.jsx"],"names":["React","Component","d3","points","Worker","width","Img","state","height","data","clickValue","componentDidMount","imageData","image","props","src","crossOrigin","then","Math","round","context","refs","canvas","getContext","drawImage","console","log","getImageData","rgba","Float64Array","i","n","length","max","setState","updateCanvas","messaged","fillStyle","fillRect","beginPath","x","y","moveTo","arc","PI","fill","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport points from '../data/points.csv'\nimport Worker from 'worker-loader!./Worker'; // eslint-disable-line import/no-webpack-loader-syntax\n\nconst width = 600;\n  \nclass Img extends Component {\n    state = {\n            height : null,\n            data : [],\n            clickValue : .6,\n        }\n\n\n    componentDidMount() {\n        // this.worker = new Worker();\n        this.imageData();\n    }\n\n    imageData() {\n        d3.image(this.props.src,  {crossOrigin: \"anonymous\"}).then(image => {\n            const height = Math.round(width * image.height / image.width);\n            const context = this.refs.canvas.getContext('2d');\n            context.drawImage(image, 0, 0, image.width, image.height, 0, 0, width, height);\n            console.log(context.getImageData(0, 0, width, height))\n            const {data: rgba} = context.getImageData(0, 0, width, height);\n            const data = new Float64Array(width * height);\n            for (let i = 0, n = rgba.length / 4; i < n; ++i) {\n                data[i] = Math.max(0, 1 - rgba[i * 4] / 200)\n            };\n            this.setState({ height, data })\n            this.updateCanvas();\n        })\n    }\n\n    updateCanvas() {\n        const { height, clickValue } = this.state\n        const context = this.refs.canvas.getContext('2d');\n        const n = Math.round(width * height / 40)\n\n        function messaged({ data: points}) {\n            context.fillStyle = \"#fff\";\n            context.fillRect(0, 0, width, height);\n            context.beginPath();\n            for (let i = 0, n = points.length; i < n; i += 2) {\n                const x = points[i], y = points[i + 1];\n                context.moveTo(x + 1.5, y);\n                context.arc(x, y, 2+clickValue, 0, 2 * Math.PI);\n            }\n            context.fillStyle = \"#000\";\n            context.fill();\n        }\n\n        // this.worker.addEventListener(\"message\", messaged);\n        // this.worker.postMessage({data, width, height, n});\n    }\n      \n    render() {\n        return (\n            <canvas width={width} height={width} style={{width:'100%', height:'100%'}} ref=\"canvas\" />\n        );\n    }\n}\n\nexport default Img;\n\n\n\n"]},"metadata":{},"sourceType":"module"}